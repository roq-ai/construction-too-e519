generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model invoice {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rental_id      String    @db.Uuid
  amount_due     Int?
  payment_status String    @db.VarChar(255)
  due_date       DateTime? @db.Timestamp(6)
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  rental         rental    @relation(fields: [rental_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model lead {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model rental {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String    @db.Uuid
  tool_id           String    @db.Uuid
  rental_start_date DateTime  @db.Timestamp(6)
  rental_end_date   DateTime? @db.Timestamp(6)
  total_price       Int?
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  invoice           invoice[]
  tool              tool      @relation(fields: [tool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model store {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  phone_number String?  @db.VarChar(255)
  email        String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  tool         tool[]
}

model tool {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String   @db.VarChar(255)
  description   String?  @db.VarChar(255)
  store_id      String   @db.Uuid
  price_per_day Int?
  available     Boolean? @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  rental        rental[]
  store         store    @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  lead        lead[]
  rental      rental[]
}
